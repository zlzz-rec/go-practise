一.使用 redis benchmark 工具, 测试 10 20 50 100 200 1k 5k 字节 value 大小，redis get set 性能
1. set测试
(base) ➜  ~ redis-benchmark -t set -n 10000 -d 10 -q
SET: 4703.67 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 20 -q
SET: 4163.20 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 50 -q
SET: 4103.41 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 100 -q
SET: 4666.36 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 200 -q
SET: 3906.25 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 1000 -q
SET: 4323.39 requests per second

(base) ➜  ~ redis-benchmark -t set -n 10000 -d 5000 -q
SET: 932.40 requests per second

2. get测试
(base) ➜  ~ redis-benchmark -t get -n 10000 -d 10 -q
GET: 2071.25 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 20 -q
GET: 2159.36 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 50 -q
GET: 2065.26 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 100 -q
GET: 2069.96 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 200 -q
GET: 2004.81 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 1000 -q
GET: 1963.86 requests per second

(base) ➜  ~ redis-benchmark -t get -n 10000 -d 5000 -q
GET: 2014.91 requests per second

二.写入一定量的 kv 数据, 根据数据大小 1w-50w 自己评估, 结合写入前后的 info memory 信息, 分析上述不同 value 大小下，平均每个 key 的占用内存空间
1.写入前
# Memory
used_memory:61677184
used_memory_human:58.82M
used_memory_rss:60641280
used_memory_rss_human:57.83M
used_memory_peak:203220840
used_memory_peak_human:193.81M
used_memory_peak_perc:30.35%
used_memory_overhead:43153490
used_memory_startup:7995240
used_memory_dataset:18523694
used_memory_dataset_perc:34.51%
used_memory_lua:550912
used_memory_lua_human:538.00K
used_memory_scripts:261024
used_memory_scripts_human:254.91K
number_of_cached_scripts:143
maxmemory:268435456
maxmemory_human:256.00M
maxmemory_policy:volatile-lru
mem_fragmentation_ratio:0.98
mem_allocator:jemalloc-5.1.0
active_defrag_running:0
lazyfree_pending_objects:0
oom_err_count:0

2.写入后
# Memory
used_memory:106070848
used_memory_human:101.16M
used_memory_rss:185389056
used_memory_rss_human:176.80M
used_memory_peak:203220840
used_memory_peak_human:193.81M
used_memory_peak_perc:52.19%
used_memory_overhead:68434280
used_memory_startup:7995240
used_memory_dataset:37636568
used_memory_dataset_perc:38.38%
used_memory_lua:839680
used_memory_lua_human:820.00K
used_memory_scripts:261192
used_memory_scripts_human:255.07K
number_of_cached_scripts:144
maxmemory:268435456
maxmemory_human:256.00M
maxmemory_policy:volatile-lru
mem_fragmentation_ratio:1.75
mem_allocator:jemalloc-5.1.0
active_defrag_running:0
lazyfree_pending_objects:0
oom_err_count:0

3.结论
写入50w个key, 每个key大小22B
写入前用量58.82M, 写入后用量101.16M.  50w个key对应用量:42.34M.  平均每个key占用空间:88.8B
